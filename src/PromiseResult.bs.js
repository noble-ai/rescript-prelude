// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Result from "./Result.bs.js";
import * as $$Promise from "./Promise.bs.js";

function map(p, fn) {
  return $$Promise.map(p, (function (res) {
                if (res.TAG === /* Ok */0) {
                  return {
                          TAG: /* Ok */0,
                          _0: Curry._1(fn, res._0)
                        };
                } else {
                  return {
                          TAG: /* Error */1,
                          _0: res._0
                        };
                }
              }));
}

function bind(p, fn) {
  return $$Promise.bind(p, (function (res) {
                if (res.TAG === /* Ok */0) {
                  return Curry._1(fn, res._0);
                } else {
                  return $$Promise.$$return({
                              TAG: /* Error */1,
                              _0: res._0
                            });
                }
              }));
}

function tap(p, fn) {
  return $$Promise.tap(p, (function (r) {
                if (r.TAG === /* Ok */0) {
                  return Curry._1(fn, r._0);
                }
                
              }));
}

function tapBind(p, fn) {
  return $$Promise.tapBind(p, (function (r) {
                if (r.TAG === /* Ok */0) {
                  return $$Promise.$$const(Curry._1(fn, r._0), r);
                } else {
                  return $$Promise.$$return(r);
                }
              }));
}

function lift(p) {
  return $$Promise.map(p, Result.$$return);
}

export {
  map ,
  bind ,
  tap ,
  tapBind ,
  lift ,
}
/* No side effect */
