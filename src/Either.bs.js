// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

function left(param_0) {
  return {
          TAG: /* Left */0,
          _0: param_0
        };
}

function right(param_0) {
  return {
          TAG: /* Right */1,
          _0: param_0
        };
}

function map(fn, t) {
  if (t.TAG === /* Left */0) {
    return {
            TAG: /* Left */0,
            _0: Curry._1(fn, t._0)
          };
  } else {
    return {
            TAG: /* Right */1,
            _0: t._0
          };
  }
}

function bimap(fnl, fnr, t) {
  if (t.TAG === /* Left */0) {
    return {
            TAG: /* Left */0,
            _0: Curry._1(fnl, t._0)
          };
  } else {
    return {
            TAG: /* Right */1,
            _0: Curry._1(fnr, t._0)
          };
  }
}

function sequence(t) {
  if (t.TAG === /* Left */0) {
    var a = t._0;
    if (a !== undefined) {
      return {
              TAG: /* Left */0,
              _0: Caml_option.valFromOption(a)
            };
    } else {
      return ;
    }
  }
  var b = t._0;
  if (b !== undefined) {
    return {
            TAG: /* Right */1,
            _0: Caml_option.valFromOption(b)
          };
  }
  
}

function either(fna, fnb, t) {
  if (t.TAG === /* Left */0) {
    return Curry._1(fna, t._0);
  } else {
    return Curry._1(fnb, t._0);
  }
}

var Nested = {};

export {
  left ,
  right ,
  map ,
  bimap ,
  sequence ,
  either ,
  Nested ,
}
/* No side effect */
